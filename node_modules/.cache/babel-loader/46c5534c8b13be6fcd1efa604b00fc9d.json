{"ast":null,"code":"import _classCallCheck from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/project_6b/src/views/ApiDataView/ApiDataView.js\";\nimport React, { Component, Children } from 'react';\nimport { array } from 'prop-types';\nimport { forEachChild } from 'typescript';\n\nvar FetchConnectApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchConnectApi, _Component);\n\n  function FetchConnectApi(props) {\n    var _this;\n\n    _classCallCheck(this, FetchConnectApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchConnectApi).call(this, props));\n    _this.state = {\n      Listing: []\n    };\n    return _this;\n  }\n\n  _createClass(FetchConnectApi, [{\n    key: \"myfunction\",\n    value: function myfunction(resposeData) {\n      var objData = JSON.parse(this.state.Listing);\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.reddit.com/r/nonbinary.json').then(function (Listing) {\n        if (!Listing.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return Listing;\n      }).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        return _this2.setState({\n          Listing: data.data\n        });\n      });\n    }\n  }, {\n    key: \"f_test\",\n    value: function f_test() {\n      var x = this.state.Listing[1].data;\n      return JSON.stringify(x);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.f_test();\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \" Failed! \");\n      if (!this.state.results) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.f_test(), \"success\");\n    }\n  }]);\n\n  return FetchConnectApi;\n}(Component);\n\nexport default FetchConnectApi;","map":{"version":3,"sources":["/var/www/project_6b/src/views/ApiDataView/ApiDataView.js"],"names":["React","Component","Children","array","forEachChild","FetchConnectApi","props","state","Listing","resposeData","objData","JSON","parse","fetch","then","ok","Error","data","json","setState","x","stringify","f_test","requestFailed","results"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACIC,SADJ,EAEIC,QAFJ,QAGO,OAHP;AAIA,SACIC,KADJ,QAEO,YAFP;AAGA,SACIC,YADJ,QAEO,YAFP;;IAIMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFe;AAKlB;;;;+BAEUC,W,EAAa;AACpB,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKL,KAAL,CAAWC,OAAtB,CAAd;AAEA,aAAO,CAAP;AACH;;;wCACmB;AAAA;;AAChBK,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACKC,IADL,CACU,UAAAN,OAAO,EAAI;AACb,YAAI,CAACA,OAAO,CAACO,EAAb,EAAiB;AACb,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AACH;;AACD,eAAOR,OAAP;AACH,OANL,EAOKM,IAPL,CAOU,UAAAG,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OAPd,EAQKJ,IARL,CAQU,UAAAG,IAAI;AAAA,eACF,MAAI,CAACE,QAAL,CAAc;AACdX,UAAAA,OAAO,EAAES,IAAI,CAACA;AADA,SAAd,CADE;AAAA,OARd;AAYH;;;6BAEG;AACJ,UAAMG,CAAC,GAAG,KAAKb,KAAL,CAAWC,OAAX,CAAmB,CAAnB,EAAsBS,IAAhC;AACA,aAAON,IAAI,CAACU,SAAL,CAAeD,CAAf,CAAP;AACH;;;6BACY;AACL,WAAKE,MAAL;AACA,UAAI,KAAKf,KAAL,CAAWgB,aAAf,EAA8B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAC9B,UAAI,CAAC,KAAKhB,KAAL,CAAWiB,OAAhB,EACI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,KAAKF,MAAL,EADM,YAAP;AAIP;;;;EAxCyBrB,S;;AA0C9B,eAAeI,eAAf","sourcesContent":["import React, {\r\n    Component,\r\n    Children\r\n} from 'react';\r\nimport {\r\n    array\r\n} from 'prop-types';\r\nimport {\r\n    forEachChild\r\n} from 'typescript';\r\n\r\nclass FetchConnectApi extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Listing: []\r\n        }\r\n    }\r\n\r\n    myfunction(resposeData) {\r\n        var objData = JSON.parse(this.state.Listing);\r\n\r\n        return 0;\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://www.reddit.com/r/nonbinary.json')\r\n            .then(Listing => {\r\n                if (!Listing.ok) {\r\n                    throw Error(\"Network request failed\")\r\n                }\r\n                return Listing;\r\n            })\r\n            .then(data => data.json())\r\n            .then(data =>\r\n                    this.setState({\r\n                    Listing: data.data\r\n                }));\r\n    }\r\n\r\nf_test(){\r\n    const x = this.state.Listing[1].data;\r\n    return JSON.stringify(x);\r\n}\r\n    render() {\r\n        this.f_test();\r\n        if (this.state.requestFailed) return <p> Failed! </p>\r\n        if (!this.state.results) \r\n            return <p>\r\n            {this.f_test()}\r\n\r\n                success</p>\r\n    }\r\n}\r\nexport default FetchConnectApi;"]},"metadata":{},"sourceType":"module"}