{"ast":null,"code":"import _classCallCheck from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\www\\\\6b\\\\src\\\\views\\\\ApiDataView\\\\ApiDataView.js\";\nimport React, { Component, Children } from 'react';\nimport { array } from 'prop-types';\n\nvar FetchConnectApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchConnectApi, _Component);\n\n  function FetchConnectApi(props) {\n    var _this;\n\n    _classCallCheck(this, FetchConnectApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchConnectApi).call(this, props));\n    _this.state = {\n      response: []\n    };\n    return _this;\n  }\n\n  _createClass(FetchConnectApi, [{\n    key: \"myfunction\",\n    value: function myfunction(resposeData) {\n      var objData = JSON.parse(this.state.response);\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.reddit.com/r/nonbinary.json').then(function (response) {\n        if (!response.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return response;\n      }).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        _this2.setState({\n          response: data\n        });\n      }, function () {\n        _this2.setState({\n          requestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"test\",\n    value: function test() {\n      return this.state.response;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dataObj = JSON.stringify(this.state.response.data);\n      var dataArr = this.state.response.map(function (s) {\n        return json;\n      });\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Failed!\");\n      if (!this.state.results) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"success \", dataObj, \" \");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FetchConnectApi;\n}(Component);\n\nexport default FetchConnectApi;","map":{"version":3,"sources":["C:/www/6b/src/views/ApiDataView/ApiDataView.js"],"names":["React","Component","Children","array","FetchConnectApi","props","state","response","resposeData","objData","JSON","parse","fetch","then","ok","Error","data","json","setState","requestFailed","dataObj","stringify","dataArr","map","s","results"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,YAAtB;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACb,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFa;AAKhB;;;;+BAEUC,W,EAAY;AACnB,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKL,KAAL,CAAWC,QAAtB,CAAd;AAEA,aAAO,CAAP;AACH;;;wCACgB;AAAA;;AACnBK,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACAC,IADA,CACK,UAAAN,QAAQ,EAAI;AAAE,YAAI,CAACA,QAAQ,CAACO,EAAd,EACnB;AAAE,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AAAuC;;AACzC,eAAOR,QAAP;AACA,OAJA,EAKAM,IALA,CAKK,UAAAG,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OALT,EAMAJ,IANA,CAMK,UAAAG,IAAI,EAAI;AACb,QAAA,MAAI,CAACE,QAAL,CAAc;AACdX,UAAAA,QAAQ,EAAES;AADI,SAAd;AAIE,OAXF,EAWI,YAAM;AACV,QAAA,MAAI,CAACE,QAAL,CAAc;AACdC,UAAAA,aAAa,EAAE;AADD,SAAd;AAGA,OAfA;AAgBA;;;2BACM;AACL,aAAO,KAAKb,KAAL,CAAWC,QAAlB;AAED;;;6BAEQ;AACT,UAAMa,OAAO,GAAGV,IAAI,CAACW,SAAL,CAAe,KAAKf,KAAL,CAAWC,QAAX,CAAoBS,IAAnC,CAAhB;AACA,UAAMM,OAAO,GAAG,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,GAApB,CAAwB,UAAAC,CAAC;AAAA,eAAGP,IAAH;AAAA,OAAzB,CAAhB;AAGG,UAAI,KAAKX,KAAL,CAAWa,aAAf,EAA8B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACjC,UAAI,CAAC,KAAKb,KAAL,CAAWmB,OAAhB,EAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYL,OAAZ,MAAP;AACzB,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAIC;;;;EA/C4BnB,S;;AAiD7B,eAAeG,eAAf","sourcesContent":["import React, { Component, Children } from 'react';\r\nimport { array } from 'prop-types';\r\n \r\nclass FetchConnectApi extends Component {\r\n  constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            response: []\r\n        }\r\n    }   \r\n    \r\n    myfunction(resposeData){\r\n        var objData = JSON.parse(this.state.response);\r\n\r\n        return 0;\r\n    }\r\n componentDidMount() {\r\n  fetch('https://www.reddit.com/r/nonbinary.json')\r\n .then(response => { if (!response.ok)\r\n  { throw Error(\"Network request failed\") }\r\n  return response;\r\n })\r\n .then(data => data.json())\r\n .then(data => {\r\n  this.setState({\r\n  response: data\r\n  \r\n   })\r\n   }, () => {\r\n  this.setState({\r\n  requestFailed: true\r\n  })\r\n })\r\n }\r\n  test(){\r\n   return this.state.response;\r\n    \r\n }\r\n\r\n render() {\r\n const dataObj = JSON.stringify(this.state.response.data)\r\n const dataArr = this.state.response.map(s=> json)\r\n \r\n   \r\n    if (this.state.requestFailed) return <p>Failed!</p>\r\n if (!this.state.results) return <p>success {dataObj} </p>\r\n return (\r\n <div> \r\n  </div>\r\n )\r\n } }\r\n\r\n export default FetchConnectApi;"]},"metadata":{},"sourceType":"module"}