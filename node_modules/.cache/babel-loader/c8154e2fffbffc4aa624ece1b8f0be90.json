{"ast":null,"code":"import _classCallCheck from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/project_6b/src/views/ApiDataView/ApiDataView.js\";\nimport React, { Component, Children } from 'react';\nimport { array, string } from 'prop-types';\nimport { forEachChild } from 'typescript';\n\nvar FetchConnectApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchConnectApi, _Component);\n\n  function FetchConnectApi(props) {\n    var _this;\n\n    _classCallCheck(this, FetchConnectApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchConnectApi).call(this, props));\n    _this.state = {\n      Listing: []\n    };\n    return _this;\n  }\n  /* function execution occurs\r\n   after async request completed */\n\n\n  _createClass(FetchConnectApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.reddit.com/r/nonbinary.json').then(function (Listing) {\n        if (!Listing.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return Listing;\n      }).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        return _this2.setState({\n          Listing: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Failed! \");\n      if (!this.state.results) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" this.state.Listing['Data'] \");\n    }\n  }]);\n\n  return FetchConnectApi;\n}(Component);\n\nexport default FetchConnectApi;","map":{"version":3,"sources":["/var/www/project_6b/src/views/ApiDataView/ApiDataView.js"],"names":["React","Component","Children","array","string","forEachChild","FetchConnectApi","props","state","Listing","fetch","then","ok","Error","data","json","setState","requestFailed","results"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACIC,SADJ,EAEIC,QAFJ,QAGO,OAHP;AAIA,SACIC,KADJ,EAEIC,MAFJ,QAGO,YAHP;AAIA,SACIC,YADJ,QAEO,YAFP;;IAIMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFe;AAKlB;AAKD;;;;;;wCAEoB;AAAA;;AAChBC,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACKC,IADL,CACU,UAAAF,OAAO,EAAI;AACb,YAAI,CAACA,OAAO,CAACG,EAAb,EAAiB;AACb,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AACH;;AACD,eAAOJ,OAAP;AACH,OANL,EAOKE,IAPL,CAOU,UAAAG,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OAPd,EAQKJ,IARL,CAQU,UAAAG,IAAI;AAAA,eAAI,MAAI,CAACE,QAAL,CAAc;AACxBP,UAAAA,OAAO,EAAEK;AADe,SAAd,CAAJ;AAAA,OARd;AAaH;;;6BAGQ;AACL,UAAI,KAAKN,KAAL,CAAWS,aAAf,EAA8B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAC9B,UAAI,CAAC,KAAKT,KAAL,CAAWU,OAAhB,EAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAP;AAC5B;;;;EAjCyBjB,S;;AAmC9B,eAAeK,eAAf","sourcesContent":["import React, {\r\n    Component,\r\n    Children\r\n} from 'react';\r\nimport {\r\n    array,\r\n    string\r\n} from 'prop-types';\r\nimport {\r\n    forEachChild\r\n} from 'typescript';\r\n\r\nclass FetchConnectApi extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Listing: []\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /* function execution occurs\r\n     after async request completed */\r\n    componentDidMount() {\r\n        fetch('https://www.reddit.com/r/nonbinary.json')\r\n            .then(Listing => {\r\n                if (!Listing.ok) {\r\n                    throw Error(\"Network request failed\")\r\n                }\r\n                return Listing;\r\n            })\r\n            .then(data => data.json())\r\n            .then(data => this.setState({\r\n                Listing: data\r\n            }));\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.requestFailed) return <p > Failed! < /p>\r\n        if (!this.state.results) return <div > this.state.Listing['Data'] < /div>\r\n    }\r\n}\r\nexport default FetchConnectApi;"]},"metadata":{},"sourceType":"module"}