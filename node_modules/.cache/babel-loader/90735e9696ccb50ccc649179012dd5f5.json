{"ast":null,"code":"import _classCallCheck from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\www\\\\6b\\\\src\\\\views\\\\ApiDataView\\\\ApiDataView.js\";\nimport React from \"react\";\n\nvar FetchConnectApi =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FetchConnectApi, _React$Component);\n\n  function FetchConnectApi(props) {\n    var _this;\n\n    _classCallCheck(this, FetchConnectApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchConnectApi).call(this, props));\n    _this.state = {\n      user: []\n    };\n    return _this;\n  }\n\n  _createClass(FetchConnectApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.reddit.com/r/nonbinary.json', {\n        method: 'GET',\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          \"mode\": \"no-cors\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          responsedata: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"New Resource created in the server as shown below\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Id : \", this.state));\n    }\n  }]);\n\n  return FetchConnectApi;\n}(React.Component);\n\nexport default FetchConnectApi;","map":{"version":3,"sources":["C:/www/6b/src/views/ApiDataView/ApiDataView.js"],"names":["React","FetchConnectApi","props","state","user","fetch","method","headers","then","response","json","setState","responsedata","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IACMC,e;;;;;AACL,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AAFkB;AAGlB;;;;wCAEmB;AAAA;;AACnBC,MAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC7CC,QAAAA,MAAM,EAAE,KADqC;AAIhDC,QAAAA,OAAO,EAAE;AACJ,0BAAgB,iCADZ;AAEJ,kBAAO;AAFH;AAJuC,OAA5C,CAAL,CASGC,IATH,CASQ,UAAAC,QAAQ,EAAI;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,OAXF,EAWIF,IAXJ,CAWS,UAAAE,IAAI,EAAI;AACf,QAAA,MAAI,CAACC,QAAL,CAAc;AACbC,UAAAA,YAAY,EAACF;AADA,SAAd;AAGA,OAfF;AAgBA;;;6BACQ;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAH,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAS,KAAKP,KAAd,CAFD,CADD;AAOA;;;;EAhC4BH,KAAK,CAACa,S;;AAmCpC,eAAeZ,eAAf","sourcesContent":["import React from \"react\";\r\nclass FetchConnectApi extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {user: []};\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://www.reddit.com/r/nonbinary.json', {\r\n      method: 'GET',\r\n      \r\n\t\r\n\t\t\theaders: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \"mode\":\"no-cors\"\r\n        \r\n\t\t\t}\r\n\t\t}).then(response => {\r\n\t\t\t\treturn response.json()\r\n\t\t\t}).then(json => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tresponsedata:json\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\trender() {                            \r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p><b>New Resource created in the server as shown below</b></p>\r\n\t\t\t\t<p>Id : {this.state}</p>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default FetchConnectApi;\r\n"]},"metadata":{},"sourceType":"module"}