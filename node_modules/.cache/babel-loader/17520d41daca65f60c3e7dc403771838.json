{"ast":null,"code":"import _classCallCheck from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/project_6b/src/views/ApiDataView/ApiDataView.js\";\nimport React, { Component, Children } from 'react';\nimport { array } from 'prop-types';\nimport { forEachChild } from 'typescript';\nimport { bugs, website, server } from \"variables/general.js\";\n\nvar FetchConnectApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchConnectApi, _Component);\n\n  function FetchConnectApi(props) {\n    var _this;\n\n    _classCallCheck(this, FetchConnectApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchConnectApi).call(this, props));\n    _this.state = {\n      Listing: []\n    };\n    return _this;\n  }\n\n  _createClass(FetchConnectApi, [{\n    key: \"myfunction\",\n    value: function myfunction(resposeData) {\n      var objData = JSON.parse(this.state.Listing);\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.reddit.com/r/nonbinary.json').then(function (Listing) {\n        if (!Listing.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return Listing;\n      }).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        return _this2.setState({\n          Listing: data\n        });\n      });\n    }\n  }, {\n    key: \"f_test\",\n    value: function f_test() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.f_test();\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Failed!\");\n      if (!this.state.results) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FetchConnectApi;\n}(Component);\n\nexport default FetchConnectApi;","map":{"version":3,"sources":["/var/www/project_6b/src/views/ApiDataView/ApiDataView.js"],"names":["React","Component","Children","array","forEachChild","bugs","website","server","FetchConnectApi","props","state","Listing","resposeData","objData","JSON","parse","fetch","then","ok","Error","data","json","setState","f_test","requestFailed","results"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,sBAAtC;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACb,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFa;AAKhB;;;;+BAEUC,W,EAAY;AACnB,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKL,KAAL,CAAWC,OAAtB,CAAd;AAEA,aAAO,CAAP;AACH;;;wCACgB;AAAA;;AACnBK,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACAC,IADA,CACK,UAAAN,OAAO,EAAI;AAAE,YAAI,CAACA,OAAO,CAACO,EAAb,EAClB;AAAE,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AAAuC;;AACzC,eAAOR,OAAP;AACA,OAJA,EAKAM,IALA,CAKK,UAAAG,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OALT,EAMAJ,IANA,CAMK,UAAAG,IAAI;AAAA,eACT,MAAI,CAACE,QAAL,CAAc;AAACX,UAAAA,OAAO,EAAES;AAAV,SAAd,CADS;AAAA,OANT;AASD;;;6BAEO,CAEP;;;6BACS;AAEN,WAAKG,MAAL;AACA,UAAI,KAAKb,KAAL,CAAWc,aAAf,EAA8B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAC9B,UAAI,CAAC,KAAKd,KAAL,CAAWe,OAAhB,EAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAC3B;;;;EAjC4BxB,S;;AAmC7B,eAAeO,eAAf","sourcesContent":["import React, { Component, Children } from 'react';\r\nimport { array } from 'prop-types';\r\nimport { forEachChild } from 'typescript';\r\nimport { bugs, website, server } from \"variables/general.js\";\r\n\r\nclass FetchConnectApi extends Component {\r\n  constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Listing: []\r\n        }\r\n    }   \r\n    \r\n    myfunction(resposeData){\r\n        var objData = JSON.parse(this.state.Listing);\r\n\r\n        return 0;\r\n    }\r\n componentDidMount() {\r\n  fetch('https://www.reddit.com/r/nonbinary.json')\r\n .then(Listing => { if (!Listing.ok)\r\n  { throw Error(\"Network request failed\") }\r\n  return Listing;\r\n })\r\n .then(data => data.json())\r\n .then(data =>\r\n  this.setState({Listing: data\r\n   }))\r\n}\r\n\r\nf_test(){\r\n \r\n}\r\n render() {\r\n\r\n    this.f_test();\r\n    if (this.state.requestFailed) return <p>Failed!</p>\r\n    if (!this.state.results) return <div>{}</div>\r\n }\r\n}\r\n export default FetchConnectApi;"]},"metadata":{},"sourceType":"module"}