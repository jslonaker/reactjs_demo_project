{"ast":null,"code":"import _classCallCheck from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\www\\\\6b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\www\\\\6b\\\\src\\\\views\\\\ApiDataView\\\\ApiDataView.js\";\nimport React, { Component } from 'react';\n\nvar FetchConnectApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchConnectApi, _Component);\n\n  function FetchConnectApi(props) {\n    var _this;\n\n    _classCallCheck(this, FetchConnectApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchConnectApi).call(this, props));\n    _this.state = {\n      response: []\n    };\n    return _this;\n  }\n\n  _createClass(FetchConnectApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.reddit.com/r/nonbinary.json', {\n        mode: 'no-cors',\n        origin: '*'\n      }).then(function (response) {\n        if (!response.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return response;\n      }).then(function (jobs) {\n        return jobs.json();\n      }).then(function (jobs) {\n        _this2.setState({\n          response: jobs\n        });\n      }, function () {\n        _this2.setState({\n          requestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Failed!\");\n      if (!this.state.results) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"success\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" \", this.state.response);\n    }\n  }]);\n\n  return FetchConnectApi;\n}(Component);\n\nexport default FetchConnectApi;","map":{"version":3,"sources":["C:/www/6b/src/views/ApiDataView/ApiDataView.js"],"names":["React","Component","FetchConnectApi","props","state","response","fetch","mode","origin","then","ok","Error","jobs","json","setState","requestFailed","results"],"mappings":";;;;;;AAAC,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,e;;;;;AACL,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACbC,MAAAA,QAAQ,EAAE;AADG,KAAb;AAFmB;AAKpB;;;;wCAEoB;AAAA;;AACnBC,MAAAA,KAAK,CAAC,yCAAD,EAA2C;AAACC,QAAAA,IAAI,EAAE,SAAP;AAAiBC,QAAAA,MAAM,EAAC;AAAxB,OAA3C,CAAL,CACAC,IADA,CACK,UAAAJ,QAAQ,EAAI;AAAE,YAAI,CAACA,QAAQ,CAACK,EAAd,EACnB;AAAE,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AAAuC;;AAEzC,eAAON,QAAP;AACA,OALA,EAMAI,IANA,CAMK,UAAAG,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OANT,EAOAJ,IAPA,CAOK,UAAAG,IAAI,EAAI;AACb,QAAA,MAAI,CAACE,QAAL,CAAc;AACdT,UAAAA,QAAQ,EAAEO;AADI,SAAd;AAGE,OAXF,EAWI,YAAM;AACV,QAAA,MAAI,CAACE,QAAL,CAAc;AACdC,UAAAA,aAAa,EAAE;AADD,SAAd;AAGA,OAfA;AAgBA;;;6BAEQ;AAET,UAAI,KAAKX,KAAL,CAAWW,aAAf,EAA8B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAC9B,UAAI,CAAC,KAAKX,KAAL,CAAWY,OAAhB,EAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACzB,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAKZ,KAAL,CAAWC,QAAlB,CADA;AAIC;;;;EAnC6BJ,S;;AAqC9B,eAAeC,eAAf","sourcesContent":[" import React, { Component } from 'react';\r\n\r\n class FetchConnectApi extends Component {\r\n  constructor(props) {\r\n  super(props)\r\n  this.state = {\r\n  response: []\r\n }\r\n}\r\n\r\n componentDidMount() {\r\n  fetch('https://www.reddit.com/r/nonbinary.json',{mode: 'no-cors',origin:'*'})\r\n .then(response => { if (!response.ok)\r\n  { throw Error(\"Network request failed\") }\r\n\r\n  return response;\r\n })\r\n .then(jobs => jobs.json())\r\n .then(jobs => {\r\n  this.setState({\r\n  response: jobs\r\n   })\r\n   }, () => {\r\n  this.setState({\r\n  requestFailed: true\r\n  })\r\n })\r\n }\r\n\r\n render() {\r\n\r\n if (this.state.requestFailed) return <p>Failed!</p>\r\n if (!this.state.results) return <p>success</p>\r\n return (\r\n <div> {this.state.response}\r\n  </div>\r\n )\r\n } }\r\n\r\n export default FetchConnectApi;"]},"metadata":{},"sourceType":"module"}