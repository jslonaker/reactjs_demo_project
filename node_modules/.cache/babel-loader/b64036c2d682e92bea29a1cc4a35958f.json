{"ast":null,"code":"import _classCallCheck from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/project_6b/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/project_6b/src/views/ApiDataView/ApiDataView.js\";\nimport React, { Component, Children } from 'react';\nimport { array } from 'prop-types';\nimport { forEachChild } from 'typescript';\n\nvar FetchConnectApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchConnectApi, _Component);\n\n  function FetchConnectApi(props) {\n    var _this;\n\n    _classCallCheck(this, FetchConnectApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchConnectApi).call(this, props));\n    _this.state = {\n      jsonData: []\n    };\n    return _this;\n  }\n\n  _createClass(FetchConnectApi, [{\n    key: \"myfunction\",\n    value: function myfunction(resposeData) {\n      var objData = JSON.parse(this.state.jsonData);\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.reddit.com/r/nonbinary.json').then(function (jsonData) {\n        if (!jsonData.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return jsonData;\n      }).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        return _this2.setState({\n          jsonData: data.data\n        });\n      });\n    }\n  }, {\n    key: \"f_test\",\n    value: function f_test() {\n      if (typeof this.state.jsonData !== \"undefined\") {\n        if (typeof this.state.jsonData.children !== \"undefined\") {\n          var x = this.state.jsonData.children.map(function (c) {\n            return c.data;\n          });\n          var retVal = [];\n\n          for (var i = 0; i < x.length; i++) {\n            var lineItem = React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              href: \"#\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, x[i].title), \" \");\n            retVal.push(lineItem);\n          }\n\n          return retVal;\n        }\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var x = this.f_test();\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" Failed! \");\n      if (!this.state.results) var x = this.f_test();\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" \", x, \"success \");\n    }\n  }]);\n\n  return FetchConnectApi;\n}(Component);\n\nexport default FetchConnectApi;","map":{"version":3,"sources":["/var/www/project_6b/src/views/ApiDataView/ApiDataView.js"],"names":["React","Component","Children","array","forEachChild","FetchConnectApi","props","state","jsonData","resposeData","objData","JSON","parse","fetch","then","ok","Error","data","json","setState","children","x","map","c","retVal","i","length","lineItem","title","push","f_test","requestFailed","results"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACIC,SADJ,EAEIC,QAFJ,QAGO,OAHP;AAIA,SACIC,KADJ,QAEO,YAFP;AAGA,SACIC,YADJ,QAEO,YAFP;;IAIMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAKlB;;;;+BAEUC,W,EAAa;AACpB,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKL,KAAL,CAAWC,QAAtB,CAAd;AAEA,aAAO,CAAP;AACH;;;wCACmB;AAAA;;AAChBK,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACKC,IADL,CACU,UAAAN,QAAQ,EAAI;AACd,YAAI,CAACA,QAAQ,CAACO,EAAd,EAAkB;AACd,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AACH;;AACD,eAAOR,QAAP;AACH,OANL,EAOKM,IAPL,CAOU,UAAAG,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OAPd,EAQKJ,IARL,CAQU,UAAAG,IAAI;AAAA,eACN,MAAI,CAACE,QAAL,CAAc;AACVX,UAAAA,QAAQ,EAAES,IAAI,CAACA;AADL,SAAd,CADM;AAAA,OARd;AAYH;;;6BAEQ;AACL,UAAI,OAAO,KAAKV,KAAL,CAAWC,QAAlB,KAA+B,WAAnC,EAAgD;AAC5C,YAAI,OAAO,KAAKD,KAAL,CAAWC,QAAX,CAAoBY,QAA3B,KAAwC,WAA5C,EAAyD;AACrD,cAAMC,CAAC,GAAG,KAAKd,KAAL,CAAWC,QAAX,CAAoBY,QAApB,CAA6BE,GAA7B,CAAiC,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACN,IAAN;AAAA,WAAlC,CAAV;AACA,cAAIO,MAAM,GAAG,EAAb;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAAC,CAACK,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B,gBAAIE,QAAQ,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAI;AAAG,cAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaN,CAAC,CAACI,CAAD,CAAD,CAAKG,KAAlB,CAAJ,MAAjB;AACIJ,YAAAA,MAAM,CAACK,IAAP,CAAYF,QAAZ;AACH;;AACD,iBAAOH,MAAP;AACH;AACJ;;AACD,aAAO,CAAP;AAEH;;;6BACQ;AACL,UAAIH,CAAC,GAAG,KAAKS,MAAL,EAAR;AAEA,UAAI,KAAKvB,KAAL,CAAWwB,aAAf,EAA8B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAC9B,UAAI,CAAC,KAAKxB,KAAL,CAAWyB,OAAhB,EACI,IAAIX,CAAC,GAAG,KAAKS,MAAL,EAAR;AACJ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACHT,CADG,aAAP;AAKH;;;;EAtDqBpB,S;;AAwD1B,eAAeI,eAAf","sourcesContent":["import React, {\r\n    Component,\r\n    Children\r\n} from 'react';\r\nimport {\r\n    array\r\n} from 'prop-types';\r\nimport {\r\n    forEachChild\r\n} from 'typescript';\r\n\r\nclass FetchConnectApi extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            jsonData: []\r\n        }\r\n    }\r\n\r\n    myfunction(resposeData) {\r\n        var objData = JSON.parse(this.state.jsonData);\r\n\r\n        return 0;\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://www.reddit.com/r/nonbinary.json')\r\n            .then(jsonData => {\r\n                if (!jsonData.ok) {\r\n                    throw Error(\"Network request failed\")\r\n                }\r\n                return jsonData;\r\n            })\r\n            .then(data => data.json())\r\n            .then(data =>\r\n                this.setState({\r\n                    jsonData: data.data\r\n                }));\r\n    }\r\n\r\n    f_test() {\r\n        if (typeof this.state.jsonData !== \"undefined\") {\r\n            if (typeof this.state.jsonData.children !== \"undefined\") {\r\n                const x = this.state.jsonData.children.map(c => c.data);\r\n                var retVal = [];\r\n                for (var i = 0; i < x.length; i++) {\r\n                    var lineItem = ( <li><a href=\"#\">{x[i].title}</a> </li>);\r\n                        retVal.push(lineItem);\r\n                    }\r\n                    return retVal;\r\n                }\r\n            }\r\n            return 0;\r\n\r\n        }\r\n        render() {\r\n            var x = this.f_test();\r\n\r\n            if (this.state.requestFailed) return <p > Failed! < /p>\r\n            if (!this.state.results)\r\n                var x = this.f_test();\r\n            return <ul > {\r\n                x\r\n            }\r\n\r\n            success < /ul>\r\n        }\r\n    }\r\n    export default FetchConnectApi;"]},"metadata":{},"sourceType":"module"}